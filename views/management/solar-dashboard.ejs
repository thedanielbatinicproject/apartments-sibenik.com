
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/management/solar-dashboard.css">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
                /* Modern glassy button styles for Load More and Export */
        .load-more-btn {
            background: linear-gradient(135deg, #7c3aed 0%, #a78bfa 100%);
            color: white;
            border: none;
            padding: 12px 28px;
            border-radius: 14px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            box-shadow: 0 8px 32px rgba(124, 58, 237, 0.15);
            backdrop-filter: blur(10px);
            transition: all 0.2s cubic-bezier(.4,0,.2,1);
            border: 1px solid rgba(255,255,255,0.18);
            margin: 0 8px;
        }
        .load-more-btn:hover {
            background: linear-gradient(135deg, #a78bfa 0%, #7c3aed 100%);
            box-shadow: 0 12px 40px rgba(124, 58, 237, 0.25);
            transform: translateY(-2px) scale(1.03);
        }
        .load-more-btn:active {
            transform: scale(0.98);
        }
        .export-btn {
            background: linear-gradient(135deg, #22c55e 0%, #4ade80 100%);
            color: white;
            border: none;
            padding: 12px 28px;
            border-radius: 14px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            box-shadow: 0 8px 32px rgba(34, 197, 94, 0.15);
            backdrop-filter: blur(10px);
            transition: all 0.2s cubic-bezier(.4,0,.2,1);
            border: 1px solid rgba(255,255,255,0.18);
            margin: 0 8px;
        }
        .export-btn:hover {
            background: linear-gradient(135deg, #4ade80 0%, #22c55e 100%);
            box-shadow: 0 12px 40px rgba(34, 197, 94, 0.25);
            transform: translateY(-2px) scale(1.03);
        }
        .export-btn:active {
            transform: scale(0.98);
        }

                /* Chart button styles */
        .chart-btn {
            padding: 8px 16px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 8px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            margin-right: 8px;
        }
        .chart-btn:hover,
        .chart-btn.active {
            background: rgba(255, 255, 255, 0.2);
        }
        /* Full-screen background and responsive layout */
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            color: white;
        }

        .management-container {
            width: 100%;
            min-height: 100vh;
            padding: 20px;
            box-sizing: border-box;
        }

        .dashboard-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .dashboard-title {
            font-size: 2.5rem;
            margin: 0 0 10px 0;
            font-weight: 300;
        }

        .dashboard-subtitle {
            font-size: 1.1rem;
            margin: 0 0 20px 0;
            opacity: 0.8;
        }

        .live-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: rgba(255, 255, 255, 0.1);
            padding: 8px 16px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
        }

        .live-dot {
            width: 8px;
            height: 8px;
            background: #4CAF50;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        /* Responsive grid layout */
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 15px;
            margin-bottom: 40px;
        }

        @media (min-width: 1200px) {
            .dashboard-grid {
                grid-template-columns: repeat(5, 1fr);
            }
        }

        @media (max-width: 768px) {
            .dashboard-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 12px;
            }
        }

        @media (max-width: 480px) {
            .dashboard-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 8px;
            }
            
            .dashboard-card {
                padding: 10px;
                min-height: 70px;
            }
            
            .card-title {
                font-size: 0.8rem;
            }
            
            .card-value {
                font-size: 1rem;
            }
            
            .card-unit {
                font-size: 0.6rem;
            }
        }

        /* Modern card design */
        .dashboard-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            padding: 16px;
            position: relative;
            transition: all 0.3s ease;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            min-height: 100px;
        }

        .dashboard-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);
        }

        .card-title {
            font-size: 0.8rem;
            font-weight: 500;
            margin: 0 0 6px 0;
            opacity: 0.8;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            line-height: 1.2;
        }

        .card-value {
            font-size: 1.6rem;
            font-weight: 600;
            margin: 0 0 4px 0;
            color: #fff;
            line-height: 1;
        }

        .card-unit {
            font-size: 0.75rem;
            opacity: 0.6;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .chart-controls {
            padding-bottom: 20px;
        }
        /* ... ostatak originalnog style bloka ... */
    </style>
</head>
<body>
    <div class="management-container">
        <div class="dashboard-header">
            <h1 class="dashboard-title">Solar Management Dashboard</h1>
            <p class="dashboard-subtitle">Real-time monitoring of MPPT solar charge controller</p>
            <div class="live-indicator">
                <div class="live-dot"></div>
                <span>Live Data</span>
            </div>
        </div>

        <% if (latestData) { %>
        <div class="dashboard-grid">
            <% 
            const newVariables = [
                'pv_charger_voltage',
                'pv_charger_power',
                'pv_charger_radiator_temp',
                'pv_relay',
                'pv_charger_accumulated_day',
                'pv_charger_accumulated_hour',
                'pv_charger_accumulated_minute',
                'charger_total_produced_energy',
                'inverter_work_state',
                'pv_charger_battery_voltage',
                'inverter_battery_voltage',
                'inverter_voltage',
                'inverter_bus_voltage',
                'inverter_current',
                'inverter_load_current',
                'inverter_power',
                'inverter_load_power',
                'inverter_system_load',
                'inverter_ac_radiator_temp',
                'inverter_transformer_temp',
                'inverter_dc_radiator_temp',
                'inverter_battery_current',
                'pv_charger_workstate',
                'discharger_total_mwh',
                'discharger_total_kwh',
                'inverter_battery_power',
                'error_message_1',
                'error_message_2',
                'warning_message_1',
                'inverter_arrow_flag',
                'load_percent',
                'charger_error_message',
                'charger_warning_message'
            ];
            const solarVars = solarVariables || {};
            for (let i = 0; i < newVariables.length; i++) {
                const variable = newVariables[i];
                const meta = solarVars[variable] || {};
                const name = meta.name || variable.replace(/_/g, ' ');
                const value = latestData[variable] !== undefined && latestData[variable] !== null ? latestData[variable] : '';
                const unit = meta.unit || '';
                const description = meta.description || '';
            %>
                <div class="dashboard-card">
                    <h3 class="card-title">
                        <%= name %>
                        <% if (description) { %>
                            <button class="info-btn" onclick="showTooltip(event, '<%- name.replace(/'/g, "\\'") %>', '<%- variable %>')" title="Info">i</button>
                        <% } %>
                    </h3>
                    <div class="card-value" id="<%= variable.replace(/_/g, '-') %>">
                        <%= value %>
                        <% if (unit) { %>
                            <span class="card-unit"><%= unit %></span>
                        <% } %>
                    </div>
                </div>
            <% } %>
        </div>
        <% } else { %>
        <div class="dashboard-card">
            <h3 class="card-title">No Data Available</h3>
            <p style="color: rgba(255,255,255,0.7);">Waiting for ESP32 to send data...</p>
        </div>
        <% } %>

        <!-- Chart Section -->
        <div class="chart-section">
            <h2>Data Visualization</h2>
            <div class="chart-controls">
                <button class="chart-btn" onclick="loadAllCharts('1h')">1 Hour</button>
                <button class="chart-btn active" onclick="loadAllCharts('6h')">6 Hours</button>
                <button class="chart-btn" onclick="loadAllCharts('12h')">12 Hours</button>
                <button class="chart-btn" onclick="loadAllCharts('24h')">24 Hours</button>
            </div>
            
            <!-- Three separate charts -->
            <div class="charts-grid">
                <div class="chart-container">
                    <h3 class="chart-subtitle">Bus Voltage [V]</h3>
                    <canvas id="pvVoltageChart"></canvas>
                </div>
                <div class="chart-container">
                    <h3 class="chart-subtitle">Battery Voltage [V]</h3>
                    <canvas id="batteryVoltageChart"></canvas>
                </div>
                <div class="chart-container">
                    <h3 class="chart-subtitle">Inverter Power [W]</h3>
                    <canvas id="chargePowerChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Data History Table -->
        <div class="data-history">
            <h2 class="history-title">Recent Data History (<%= totalRecords %> total records)</h2>
            <div class="history-table-container">
                <table class="history-table">
                    <thead>
                        <tr>
                            <th>Time</th>
                            <th>Bus Voltage [V]</th>
                            <th>Battery Voltage [V]</th>
                            <th>Inverter Power [W]</th>
                            <th>Load Power [W]</th>
                            <th>Grid Power [W]</th>
                        </tr>
                    </thead>
                    <tbody id="historyTableBody">
                        <% if (solarData && solarData.length > 0) { %>
                            <% const displayCount = Math.min(50, solarData.length); %>
                            <% solarData.slice(-displayCount).reverse().forEach((record, index) => { %>
                            <tr>
                                <td><%= new Date(record.timestamp).toLocaleString() %></td>
                                <td><%= record.Bus_voltage_V || '0' %></td>
                                <td><%= record.Battery_voltage_V || '0' %></td>
                                <td><%= record.P_Inverter_W || '0' %></td>
                                <td><%= record.P_Load_W || '0' %></td>
                                <td><%= record.P_Grid_W || '0' %></td>
                            </tr>
                            <% }); %>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
        
        <!-- Buttons Section - Outside the table container -->
        
        <div style="text-align: center; margin-top: 20px; display: flex; gap: 15px; justify-content: center; flex-wrap: wrap;">
            <% if (totalRecords > 10) { %>
            <button class="load-more-btn" id="loadMoreBtn" onclick="loadMoreData()">
                Load More Data
                    }

            </button>
            <% } %>
            <button class="export-btn" id="exportBtn" onclick="exportJsonData()">
                EXPORT JSON DATA
            </button>
        </div>
        
    </div>

    <!-- Info Tooltip -->
    <div id="infoTooltip" class="info-tooltip">
        <button class="tooltip-close" onclick="hideTooltip()">×</button>
        <div class="tooltip-title" id="tooltipTitle"></div>
        <div id="tooltipDescription"></div>
    </div>

    

<script>
    window.API_SECRET = "<%= process.env.API_SECRET || 'your-secret-api-key-here' %>";
    window.totalRecords = <%= totalRecords || 0 %>;
</script>
<script src="/javascripts/solar-dashboard.js"></script>
<script>
// Hide tooltip on scroll
window.addEventListener('scroll', function() {
    if (typeof hideTooltip === 'function') hideTooltip();
}, { passive: true });
</script>
</body>
</html>
